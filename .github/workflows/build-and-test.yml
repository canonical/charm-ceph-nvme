name: Build/Test

on:
  workflow_call:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: python3 -m pip install tox

      - name: Run linters
        run: tox -e pep8

  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get -qq install libxslt-dev libxml2-dev python3-lxml
          python3 -m pip install tox

      - name: Run tests
        run: tox -e py3

  build:
    name: Build the charm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup LXD
        uses: canonical/setup-lxd@v0.1.1
        with:
          channel: 5.20/stable

      - name: Install dependencies
        run: python3 -m pip install tox

      - name: Build charm(s)
        id: builder
        run: |
          sudo snap install charmcraft --classic
          tox -e build

      - name: Upload built charm
        uses: actions/upload-artifact@v3
        with:
          name: charms
          path: "*.charm"

  functional-test:
    needs:
      - lint
      - unit-test
      - build
    name: Functional tests
    runs-on: ubuntu-latest
    steps:

      - name: Download charm
        uses: actions/download-artifact@v3
        with:
          name: charms
          path: ~/artifacts/

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup LXD
        uses: canonical/setup-lxd@v0.1.1
        with:
          # pin lxd to LTS release.
          channel: 5.21/stable

      - name: Install dependencies
        run: |
          python3 -m pip install tox
          if [ ! -d "$HOME/.local/share/juju" ]; then
            sudo snap install juju --channel=3.4/stable
            mkdir -p ~/.local/share/juju
            juju bootstrap localhost localhost
          fi

          sudo snap install --classic juju-crashdump

      - name: Run focal-yoga tests
        run: |
          date
          mv ~/artifacts/ceph-nvme.charm ./
          tox -e func-target -- focal-yoga

      - name: Generate crash dumps
        if: failure()
        run: |
          models=$(juju models | grep zaza | awk '{print $1}' | tr -d '*')
          rm -rf ./crashdumps
          mkdir ./crashdumps
          for model in $models; do
            juju crashdump -m $model -o ./crashdumps
          done

      - name: Upload artifacts on failure
        uses: actions/upload-artifact@v3
        with:
          name: crashdumps
          path: "./crashdumps/*"
        if: failure()

      - name: Tear down models
        if: always()
        run: |
          models=$(juju models | grep zaza | awk '{print $1}' | tr -d '*')
          for model in $models; do
            juju destroy-model --no-prompt --force --destroy-storage $model
          done
